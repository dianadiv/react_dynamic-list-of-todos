{"version":3,"sources":["types/FilterOptions.ts","components/TodoItem/TodoItem.tsx","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["FilterOptions","TodoItem","item","handleClick","activeItem","className","cn","id","completed","title","type","onClick","TodoList","todos","activeTodo","map","todo","TodoFilter","handleQuery","query","handleDelete","onChange","event","target","value","All","Active","Completed","placeholder","trim","length","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","selectedTodo","hideModal","useState","user","setUser","loading","setLoading","useEffect","userId","finally","href","name","App","setTodos","setActiveTodo","filter","setFilter","setQuery","showModal","setShowModal","availabelTodos","useMemo","allTodos","currentQuery","currentFilter","preparedTodos","toLowerCase","includes","prepareTodos","filterName","newQuery","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a5ad67a7.chunk.js","sourcesContent":["export enum FilterOptions{\n  All = 'all',\n  Active = 'active',\n  Completed = 'completed',\n}\n","import cn from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ninterface Props{\n  item: Todo;\n  handleClick: (item: Todo) => void\n  activeItem: Todo\n}\n\nexport const TodoItem: React.FC<Props> = ({\n  item, handleClick, activeItem,\n}) => {\n  return (\n    <tr\n      data-cy=\"todo\"\n      className={cn({\n        'has-background-info-light': activeItem?.id === item.id,\n      })}\n    >\n      <td className=\"is-vcentered\">{item.id}</td>\n      {!item.completed\n        ? (\n          <td className=\"is-vcentered\" />\n        )\n        : (\n          <td className=\"is-vcentered\">\n            <span className=\"icon\" data-cy=\"iconCompleted\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </td>\n        )}\n      <td className=\"is-vcentered\" />\n      <td className=\"is-vcentered is-expanded\">\n        <p\n          className={cn({\n            'has-text-danger': !item.completed,\n            'has-text-success': item.completed,\n          })}\n        >\n          {item.title}\n        </p>\n      </td>\n      <td className=\"has-text-right is-vcentered\">\n        <button\n          data-cy=\"selectButton\"\n          className=\"button\"\n          type=\"button\"\n          onClick={() => handleClick(item)}\n        >\n          <span className=\"icon\">\n            <i className={cn('far', {\n              'fa-eye': activeItem.id !== item.id,\n              'fa-eye-slash': activeItem.id === item.id,\n            })}\n            />\n          </span>\n        </button>\n      </td>\n    </tr>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { TodoItem } from '../TodoItem/TodoItem';\n\ninterface Props{\n  todos: Todo[],\n  handleClick: (item: Todo) => void\n  activeTodo: Todo,\n}\n\nexport const TodoList: React.FC<Props> = ({\n  todos, handleClick, activeTodo,\n}) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map(todo => (\n          <TodoItem\n            item={todo}\n            key={todo.id}\n            activeItem={activeTodo}\n            handleClick={handleClick}\n          />\n        ))}\n\n      </tbody>\n    </table>\n  );\n};\n","import { FilterOptions } from '../../types/FilterOptions';\n\ninterface Props{\n  handleClick: (filter: FilterOptions) => void,\n  handleQuery: (value: string) => void,\n  query: string,\n  handleDelete: () => void,\n}\n\nexport const TodoFilter:React.FC<Props> = ({\n  handleClick, handleQuery, query, handleDelete,\n}) => (\n  <form className=\"field has-addons\">\n    <p className=\"control\">\n      <span className=\"select\">\n        <select\n          data-cy=\"statusSelect\"\n          onChange={(event) => handleClick(event.target.value as FilterOptions)}\n        >\n          <option value={FilterOptions.All}>All</option>\n          <option value={FilterOptions.Active}>Active</option>\n          <option value={FilterOptions.Completed}>Completed</option>\n        </select>\n      </span>\n    </p>\n\n    <p className=\"control is-expanded has-icons-left has-icons-right\">\n      <input\n        data-cy=\"searchInput\"\n        type=\"text\"\n        className=\"input\"\n        placeholder=\"Search...\"\n        value={query}\n        onChange={event => handleQuery(event.target.value.trim())}\n      />\n      <span className=\"icon is-left\">\n        <i className=\"fas fa-magnifying-glass\" />\n      </span>\n\n      {query.length > 0 && (\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          <button\n            data-cy=\"clearSearchButton\"\n            type=\"button\"\n            className=\"delete\"\n            onClick={handleDelete}\n          />\n        </span>\n      )}\n    </p>\n  </form>\n);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { getUser } from '../../api';\nimport { User } from '../../types/User';\nimport { Todo } from '../../types/Todo';\n\ninterface Props{\n  selectedTodo: Todo,\n  hideModal: () => void\n}\n\nexport const TodoModal: React.FC<Props> = ({ selectedTodo, hideModal }) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    setLoading(true);\n    if (selectedTodo) {\n      getUser(selectedTodo.userId)\n        .then(setUser)\n        .finally(() => setLoading(false));\n    }\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {loading ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${selectedTodo.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => hideModal()}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {selectedTodo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {selectedTodo.completed\n                ? (\n                  <strong className=\"has-text-success\">Done</strong>\n                )\n                : (\n                  <strong className=\"has-text-danger\">Planned</strong>\n                )}\n\n              {' by '}\n\n              <a href=\"mailto:Sincere@april.biz\">\n                {user?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useMemo, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\nimport { FilterOptions } from './types/FilterOptions';\n\nfunction prepareTodos(allTodos: Todo[], currentQuery: string, currentFilter: FilterOptions) {\n  let preparedTodos = [] as Todo[];\n\n  switch (currentFilter) {\n    case FilterOptions.All:\n    default:\n      preparedTodos = [...allTodos];\n      break;\n    case FilterOptions.Active:\n      preparedTodos = allTodos.filter(todo => !todo.completed);\n      break;\n    case FilterOptions.Completed:\n      preparedTodos = allTodos.filter(todo => todo.completed);\n      break;\n  }\n\n  if (currentQuery) {\n    preparedTodos = preparedTodos.filter(todo => (\n      todo.title.toLowerCase().includes(currentQuery.toLowerCase())\n    ));\n  }\n\n  return preparedTodos;\n}\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[] | []>([]);\n  const [activeTodo, setActiveTodo] = useState({} as Todo);\n  const [filter, setFilter] = useState(FilterOptions.All);\n  const [query, setQuery] = useState('');\n\n  const [showModal, setShowModal] = useState(false);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    setLoading(true);\n    getTodos()\n      .then(setTodos)\n      .finally(() => setLoading(false));\n  }, []);\n\n  const handleClick = (item: Todo) => {\n    setActiveTodo(item);\n    setShowModal(true);\n  };\n\n  const handleHideModal = () => {\n    setShowModal(false);\n    setActiveTodo({} as Todo);\n  };\n\n  const handleFilter = (filterName: FilterOptions) => {\n    setFilter(filterName);\n  };\n\n  const handleQuery = (newQuery: string) => {\n    setQuery(newQuery);\n  };\n\n  const handleDelete = () => {\n    setQuery('');\n  };\n\n  const availabelTodos = useMemo(() => prepareTodos(todos, query, filter), [todos, query, filter]);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                handleClick={handleFilter}\n                handleQuery={handleQuery}\n                query={query}\n                handleDelete={handleDelete}\n              />\n            </div>\n\n            <div className=\"block\">\n              {loading && <Loader />}\n\n              {!loading && (\n                <TodoList\n                  todos={availabelTodos}\n                  handleClick={handleClick}\n                  activeTodo={activeTodo}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {showModal && (\n        <TodoModal selectedTodo={activeTodo} hideModal={handleHideModal} />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}